#name: Terraform Apply on PR merge to main
#
#on:
#  pull_request:
#    types: [closed]
#    branches:
#      - main 
#
#jobs:
#  terraform-apply:
#    if: github.event.pull_request.merged == true 
#    name: Terraform Apply
#    runs-on: ubuntu-latest

name: Terraform Release Apply

on:
  release:
    types: [edited]

jobs:
  release-apply:
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        id: docker
        run: |
          # IMAGE_TAG=pr-${{ github.event.pull_request.number }}
          IMAGE_TAG="${REPO_NAME}"
          cd backend_image && docker build -t $IMAGE_TAG .
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::877680973630:role/Terraform_ECS_Backent
          aws-region: eu-central-1


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="docker_image=${{ steps.docker.outputs.image_tag }}"

      - name: Send Telegram Notification
        if: success()  # Только если все шаги до этого прошли успешно
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="✅ Terraform Apply Backend Success " \
            -d parse_mode=Markdown
