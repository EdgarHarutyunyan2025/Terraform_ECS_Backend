name: PR Terraform Plan

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    outputs:
      image_tag: ${{ steps.docker.outputs.image_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        id: docker
        run: |
          IMAGE_TAG=backend-pr-${{ github.event.pull_request.number }}
          cd backend_image && docker build -t $IMAGE_TAG .
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT


  terraform-plan:
    needs: docker-image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    outputs:
      plan_status: ${{ steps.plan.outcome }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::877680973630:role/Terraform_ECS_Backent
          aws-region: eu-central-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform refresh
        id: refresh
        run: terraform refresh
        continue-on-error: true

      - name: Terraform Plan 
        id: plan
        run: |
          terraform plan -no-color -var="docker_image=${{ needs.docker-image.outputs.image_tag }}" > backend-plan.txt
        continue-on-error: true

      - name: Upload Terraform Plan
        id: upload
        if: steps.refresh.outcome == 'success' && steps.plan.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: backend-plan.txt

      - name: Comment Plan on PR
        if: steps.upload.outcome == 'success'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: backend-plan.txt
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  telegram-notify:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Download plan artifact
        if: needs.terraform-plan.outputs.plan_status == 'success'
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: .

      - name: Send plan to Telegram (as file)
        if: needs.terraform-plan.outputs.plan_status == 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          document: backend-plan.txt
          message: "✅ Terraform plan was successful for Opened PR in Backend."

      - name: Send failure message
        if: needs.terraform-plan.outputs.plan_status != 'success'
        uses: appleboy/telegram-action@master
        with: 
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: "❌ Terraform plan failed for Opened PR in Backend. Please check the GitHub Actions logs."

